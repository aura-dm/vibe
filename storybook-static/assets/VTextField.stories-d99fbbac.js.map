{"version":3,"file":"VTextField.stories-d99fbbac.js","sources":["../../src/components/VTextField/VTextField.styles.ts","../../src/components/VTextField/VTextField.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport VTypography from \"../VTypography\";\n\nexport const Base = styled.div`\n  ${({ theme }) => theme.components.textField.base};\n`;\n\nexport const Input = styled(VTypography).attrs({\n  component: \"input\",\n  variant: \"body\",\n})`\n  ${({ theme }) => theme.components.textField.input};\n`;\n\nexport const Label = styled(VTypography).attrs({\n  component: \"label\",\n  variant: \"body\",\n})`\n  ${({ theme }) => theme.components.textField.label};\n`;\n","import { ChangeEvent } from \"react\";\n\nimport { Base, Input, Label } from \"./VTextField.styles\";\n\ninterface Props {\n  /**\n   * Label text\n   */\n  label?: string;\n  /**\n   * Id that links the label to the input\n   */\n  labelId?: string;\n  /**\n   * Input element name\n   */\n  name?: string;\n  /**\n   * Optional change handler\n   */\n  onChange?: (evt: ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * Text displayed before user input\n   */\n  placeholder?: string;\n  /**\n   * Input type. i.e. text, password, email.\n   */\n  type?: string;\n  /**\n   * Value to be displayed. `onChange` handler is required if value is set.\n   */\n  value?: string;\n  [x: string]: any;\n}\n\n/**\n * Primary UI component for user input\n */\nconst VTextField = ({\n  label,\n  labelId,\n  name,\n  onChange,\n  placeholder,\n  type = \"text\",\n  value,\n  ...rest\n}: Props) => {\n  return (\n    <Base {...rest}>\n      {label && <Label htmlFor={labelId}>{label}</Label>}\n      <Input\n        id={labelId}\n        name={name}\n        onChange={onChange}\n        placeholder={placeholder}\n        type={type}\n        value={value}\n      />\n    </Base>\n  );\n};\n\nexport default VTextField;\n"],"names":["Base","styled","theme","Input","VTypography","Label","VTextField","__name","label","labelId","name","onChange","placeholder","value","_jsxs","rest","type","VTextField$1"],"mappings":"0UAIO,MAAMA,EAAOC,EAAO;AAAA,IACvB,CAAC,CAAE,MAAAC,CAAY,IAAAA,EAAM,WAAW,UAAU;AAAA,EAGjCC,EAAQF,EAAOG,CAAW,EAAE,MAAM,CAC7C,UAAW,QACX,QAAS,MACX,CAAC;AAAA,IACG,CAAC,CAAE,MAAAF,CAAY,IAAAA,EAAM,WAAW,UAAU;AAAA,EAGjCG,EAAQJ,EAAOG,CAAW,EAAE,MAAM,CAC7C,UAAW,QACX,QAAS,MACX,CAAC;AAAA,IACG,CAAC,CAAE,MAAAF,CAAY,IAAAA,EAAM,WAAW,UAAU;AAAA,ECoB9CI,EAAAC,EAAA,CAAA,CAAoB,MAAAC,EAClBA,QAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,KAAAA,EAAAA,OACO,MAAAC,EACPA,GAAAA,CAEK,IACLC,EAAAd,EAAA,CACO,GAAAe,EAAKA,SAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CACQ,QAAAN,EAAUA,SAAAA,CAAUD,CAAAA,EAAAA,EAAAA,EAAAA,CAC9B,GAAAC,EACAA,KAAAA,EACJ,SAAAE,EACA,YAAAC,EACA,KAAAI,EACA,MAAAH,CACA,CAAA,CAAA,CACA,CAAA,EApBR,cAyBAI,EAAAX;;;;;;;;;;;;;;;;;;;;;;;;;"}